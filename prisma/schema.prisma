// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  name         String
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  shops Shop[]
}

model Shop {
  id          Int      @id @default(autoincrement())
  shopId      Int      @unique // ID toko dari Shopee
  userId      Int
  shopName    String
  shopLogo    String?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user  User    @relation(fields: [userId], references: [id])
  token Token?
  Order Order[]
}

model Token {
  id           Int      @id @default(autoincrement())
  shopId       Int      @unique
  accessToken  String   @db.Text
  refreshToken String   @db.Text
  expiresAt    BigInt
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  shop Shop @relation(fields: [shopId], references: [shopId], onDelete: Cascade)
}

model Order {
  id      Int    @id @default(autoincrement())
  orderSn String @unique // 'order_sn' dari Shopee
  status  String // Status pesanan, contoh: "PROCESSED", "SHIPPED"
  rawData Json? // Opsional: Simpan seluruh payload asli untuk referensi

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relasi: Setiap Order dimiliki oleh SATU Shop
  shopId Int
  shop   Shop @relation(fields: [shopId], references: [shopId])
}

model WebhookLog {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  shopId    String
  code      Int
  msgId     String
  data    Json
}
